// Code generated by protoc-gen-go. DO NOT EDIT.
// source: posts.proto

// option go_package = "github.com/stevepartridge/blogorama/protos/go";

package blog

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Post struct {
	// UUID for post
	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// Title of the blog post
	Title string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	// Content body of the blog post
	Content string `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	// Flag for if post is private
	Private bool `protobuf:"varint,5,opt,name=private,proto3" json:"private,omitempty"`
	// Created By Reference
	CreatedById int32 `protobuf:"varint,20,opt,name=created_by_id,json=createdById,proto3" json:"created_by_id,omitempty"`
	// Timestamp of creation time
	CreatedAt string `protobuf:"bytes,21,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Updated By Reference
	UpdatedById int32 `protobuf:"varint,22,opt,name=updated_by_id,json=updatedById,proto3" json:"updated_by_id,omitempty"`
	// Timestamp of last update
	UpdatedAt            string   `protobuf:"bytes,23,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Post) Reset()         { *m = Post{} }
func (m *Post) String() string { return proto.CompactTextString(m) }
func (*Post) ProtoMessage()    {}
func (*Post) Descriptor() ([]byte, []int) {
	return fileDescriptor_b14bd1586479c33d, []int{0}
}

func (m *Post) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Post.Unmarshal(m, b)
}
func (m *Post) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Post.Marshal(b, m, deterministic)
}
func (m *Post) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Post.Merge(m, src)
}
func (m *Post) XXX_Size() int {
	return xxx_messageInfo_Post.Size(m)
}
func (m *Post) XXX_DiscardUnknown() {
	xxx_messageInfo_Post.DiscardUnknown(m)
}

var xxx_messageInfo_Post proto.InternalMessageInfo

func (m *Post) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Post) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Post) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *Post) GetPrivate() bool {
	if m != nil {
		return m.Private
	}
	return false
}

func (m *Post) GetCreatedById() int32 {
	if m != nil {
		return m.CreatedById
	}
	return 0
}

func (m *Post) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

func (m *Post) GetUpdatedById() int32 {
	if m != nil {
		return m.UpdatedById
	}
	return 0
}

func (m *Post) GetUpdatedAt() string {
	if m != nil {
		return m.UpdatedAt
	}
	return ""
}

type PostRequest struct {
	Post                 *Post    `protobuf:"bytes,1,opt,name=post,proto3" json:"post,omitempty"`
	Ids                  []int32  `protobuf:"varint,2,rep,packed,name=ids,proto3" json:"ids,omitempty"`
	UserId               int32    `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Limit                int32    `protobuf:"varint,10,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset               int32    `protobuf:"varint,11,opt,name=offset,proto3" json:"offset,omitempty"`
	Total                int32    `protobuf:"varint,12,opt,name=total,proto3" json:"total,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PostRequest) Reset()         { *m = PostRequest{} }
func (m *PostRequest) String() string { return proto.CompactTextString(m) }
func (*PostRequest) ProtoMessage()    {}
func (*PostRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b14bd1586479c33d, []int{1}
}

func (m *PostRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PostRequest.Unmarshal(m, b)
}
func (m *PostRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PostRequest.Marshal(b, m, deterministic)
}
func (m *PostRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PostRequest.Merge(m, src)
}
func (m *PostRequest) XXX_Size() int {
	return xxx_messageInfo_PostRequest.Size(m)
}
func (m *PostRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PostRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PostRequest proto.InternalMessageInfo

func (m *PostRequest) GetPost() *Post {
	if m != nil {
		return m.Post
	}
	return nil
}

func (m *PostRequest) GetIds() []int32 {
	if m != nil {
		return m.Ids
	}
	return nil
}

func (m *PostRequest) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *PostRequest) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *PostRequest) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *PostRequest) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

type PostResponse struct {
	Post                 *Post    `protobuf:"bytes,1,opt,name=post,proto3" json:"post,omitempty"`
	Posts                []*Post  `protobuf:"bytes,2,rep,name=posts,proto3" json:"posts,omitempty"`
	Limit                int32    `protobuf:"varint,10,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset               int32    `protobuf:"varint,11,opt,name=offset,proto3" json:"offset,omitempty"`
	Total                int32    `protobuf:"varint,12,opt,name=total,proto3" json:"total,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PostResponse) Reset()         { *m = PostResponse{} }
func (m *PostResponse) String() string { return proto.CompactTextString(m) }
func (*PostResponse) ProtoMessage()    {}
func (*PostResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b14bd1586479c33d, []int{2}
}

func (m *PostResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PostResponse.Unmarshal(m, b)
}
func (m *PostResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PostResponse.Marshal(b, m, deterministic)
}
func (m *PostResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PostResponse.Merge(m, src)
}
func (m *PostResponse) XXX_Size() int {
	return xxx_messageInfo_PostResponse.Size(m)
}
func (m *PostResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PostResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PostResponse proto.InternalMessageInfo

func (m *PostResponse) GetPost() *Post {
	if m != nil {
		return m.Post
	}
	return nil
}

func (m *PostResponse) GetPosts() []*Post {
	if m != nil {
		return m.Posts
	}
	return nil
}

func (m *PostResponse) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *PostResponse) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *PostResponse) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func init() {
	proto.RegisterType((*Post)(nil), "blog.Post")
	proto.RegisterType((*PostRequest)(nil), "blog.PostRequest")
	proto.RegisterType((*PostResponse)(nil), "blog.PostResponse")
}

func init() { proto.RegisterFile("posts.proto", fileDescriptor_b14bd1586479c33d) }

var fileDescriptor_b14bd1586479c33d = []byte{
	// 397 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x92, 0xcf, 0xaa, 0xd3, 0x40,
	0x14, 0xc6, 0xc9, 0xbf, 0x5e, 0xef, 0xc9, 0x55, 0x64, 0xb8, 0xde, 0x0e, 0x45, 0x65, 0x98, 0x55,
	0x16, 0xfd, 0x03, 0x75, 0x65, 0x45, 0xb0, 0x2e, 0x84, 0x2e, 0x04, 0xc9, 0x0b, 0x94, 0x69, 0x33,
	0x0d, 0x03, 0x31, 0x13, 0x33, 0xa7, 0x4a, 0x11, 0x5f, 0x42, 0x5c, 0xfa, 0x00, 0x3e, 0xa6, 0xcc,
	0x99, 0x04, 0x14, 0x17, 0x6e, 0xee, 0x2a, 0xf9, 0xbe, 0xf3, 0xe3, 0x9b, 0x73, 0xce, 0x0c, 0xe4,
	0x9d, 0x75, 0xe8, 0x96, 0x5d, 0x6f, 0xd1, 0xb2, 0xf4, 0xd0, 0xd8, 0x7a, 0xf6, 0xb4, 0xb6, 0xb6,
	0x6e, 0xf4, 0x4a, 0x75, 0x66, 0xa5, 0xda, 0xd6, 0xa2, 0x42, 0x63, 0xdb, 0x81, 0x99, 0xcd, 0xe9,
	0x73, 0x5c, 0xd4, 0xba, 0x5d, 0xb8, 0x2f, 0xaa, 0xae, 0x75, 0xbf, 0xb2, 0x1d, 0x11, 0xff, 0xd2,
	0xf2, 0x57, 0x0c, 0xe9, 0x07, 0xeb, 0x90, 0x3d, 0x82, 0xd8, 0x54, 0x3c, 0x12, 0x51, 0x91, 0x95,
	0xb1, 0xa9, 0xd8, 0x2d, 0x64, 0x68, 0xb0, 0xd1, 0x3c, 0x11, 0x51, 0x71, 0x5d, 0x06, 0xc1, 0x38,
	0x5c, 0x1d, 0x6d, 0x8b, 0xba, 0x45, 0x9e, 0x92, 0x3f, 0x4a, 0x5f, 0xe9, 0x7a, 0xf3, 0x59, 0xa1,
	0xe6, 0x99, 0x88, 0x8a, 0x07, 0xe5, 0x28, 0x99, 0x84, 0x87, 0xc7, 0x5e, 0x2b, 0xd4, 0xd5, 0xfe,
	0x70, 0xd9, 0x9b, 0x8a, 0xdf, 0xd2, 0x21, 0xf9, 0x60, 0xbe, 0xbd, 0xec, 0x2a, 0xf6, 0x0c, 0x60,
	0x64, 0x14, 0xf2, 0x27, 0x14, 0x7d, 0x3d, 0x38, 0x5b, 0xf4, 0x11, 0xe7, 0xae, 0xfa, 0x23, 0xe2,
	0x2e, 0x44, 0x0c, 0xe6, 0x18, 0x31, 0x32, 0x0a, 0xf9, 0x34, 0x44, 0x0c, 0xce, 0x16, 0x37, 0x6f,
	0xbe, 0x6f, 0x5f, 0xaf, 0x5f, 0xb1, 0x97, 0x5f, 0x85, 0xa4, 0x51, 0xe4, 0x46, 0xc8, 0xf7, 0x17,
	0xf1, 0xce, 0xf4, 0x0e, 0x85, 0xdf, 0x80, 0x9c, 0x0b, 0x39, 0x0c, 0x33, 0xd4, 0xfc, 0xe6, 0xc5,
	0x68, 0x7d, 0x93, 0x3f, 0x23, 0xc8, 0x3d, 0x58, 0xea, 0x4f, 0x67, 0xed, 0x90, 0x3d, 0x87, 0xd4,
	0x13, 0xb4, 0xb3, 0x7c, 0x0d, 0x4b, 0x7f, 0x37, 0x4b, 0x02, 0xc8, 0x67, 0x8f, 0x21, 0x31, 0x95,
	0xe3, 0xb1, 0x48, 0x8a, 0xac, 0xf4, 0xbf, 0x6c, 0x0a, 0x57, 0x67, 0xa7, 0x7b, 0x3f, 0x40, 0x42,
	0x03, 0x4c, 0xbc, 0xdc, 0xd1, 0xb2, 0x1b, 0xf3, 0xd1, 0x20, 0x07, 0xb2, 0x83, 0x60, 0x77, 0x30,
	0xb1, 0xa7, 0x93, 0xd3, 0xc8, 0xf3, 0x40, 0x07, 0x45, 0x57, 0x63, 0x51, 0x35, 0xfc, 0x26, 0xd0,
	0x24, 0xe4, 0x8f, 0x08, 0x6e, 0x42, 0x7b, 0xae, 0xb3, 0xad, 0xd3, 0xff, 0xed, 0x4f, 0x40, 0x46,
	0x6f, 0x8b, 0x3a, 0xfc, 0x1b, 0x08, 0x85, 0xfb, 0x68, 0xeb, 0x30, 0xa1, 0x77, 0xf6, 0xe2, 0x77,
	0x00, 0x00, 0x00, 0xff, 0xff, 0x5d, 0xf4, 0xec, 0x9a, 0xc8, 0x02, 0x00, 0x00,
}
